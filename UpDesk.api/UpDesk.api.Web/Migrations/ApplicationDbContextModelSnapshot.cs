// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UpDesk.Api.Data;

#nullable disable

namespace UpDesk.api.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UpDesk.Api.Models.Chamado", b =>
                {
                    b.Property<int>("ChamadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("chamado_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChamadoId"));

                    b.Property<int?>("AtendenteId")
                        .HasColumnType("int");

                    b.Property<string>("CategoriaChamado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("categoria_Chamado");

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaModificacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoChamado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao_Chamado");

                    b.Property<string>("PrioridadeChamado")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("prioridade_Chamado");

                    b.Property<int?>("SolicitanteId")
                        .HasColumnType("int");

                    b.Property<string>("SolucaoAplicada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolucaoSugerida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusChamado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status_Chamado");

                    b.Property<string>("TituloChamado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("titulo_Chamado");

                    b.HasKey("ChamadoId");

                    b.HasIndex("AtendenteId");

                    b.HasIndex("SolicitanteId");

                    b.ToTable("Chamado");
                });

            modelBuilder.Entity("UpDesk.Api.Models.Interacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChamadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChamadoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Interacoes");
                });

            modelBuilder.Entity("UpDesk.Api.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Setor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("UpDesk.Api.Models.Chamado", b =>
                {
                    b.HasOne("UpDesk.Api.Models.Usuario", "Atendente")
                        .WithMany("ChamadosAtendidos")
                        .HasForeignKey("AtendenteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UpDesk.Api.Models.Usuario", "Solicitante")
                        .WithMany("ChamadosSolicitados")
                        .HasForeignKey("SolicitanteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Atendente");

                    b.Navigation("Solicitante");
                });

            modelBuilder.Entity("UpDesk.Api.Models.Interacao", b =>
                {
                    b.HasOne("UpDesk.Api.Models.Chamado", "Chamado")
                        .WithMany("Interacoes")
                        .HasForeignKey("ChamadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UpDesk.Api.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chamado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("UpDesk.Api.Models.Chamado", b =>
                {
                    b.Navigation("Interacoes");
                });

            modelBuilder.Entity("UpDesk.Api.Models.Usuario", b =>
                {
                    b.Navigation("ChamadosAtendidos");

                    b.Navigation("ChamadosSolicitados");
                });
#pragma warning restore 612, 618
        }
    }
}
